import numpy as np
from sklearn.model_selection import train_test_split

def acq_rnd(i,prediction_idxs, remaining_idxs, prediction_set_size, rnd_size, mbtr_data,homo_lowfid):
    """
    random sampling
    """
    prediction_idxs_bef = prediction_idxs

    print(i,"before",len(prediction_idxs_bef))
    print(i,"remain",len(remaining_idxs))

    prediction_idxs, remaining_idxs = train_test_split(remaining_idxs, train_size = prediction_set_size, random_state=0)
    #   ----------------------
    #pick up index for random
    pick_idxs,a = train_test_split(prediction_idxs, train_size = rnd_size, random_state=0)
    print("length of pick_idxs",len(pick_idxs))
    #   ----------------------------

    prediction_idxs = np.r_[prediction_idxs_bef, pick_idxs]

#    X_train, X_test = mbtr_data[prediction_idxs, :], mbtr_data[test_idxs, :]
#    y_train, y_test = homo_lowfid[prediction_idxs], homo_lowfid[test_idxs]
    X_train = mbtr_data[prediction_idxs, :]
    y_train = homo_lowfid[prediction_idxs]

    return prediction_idxs, X_train, y_train
                                    
